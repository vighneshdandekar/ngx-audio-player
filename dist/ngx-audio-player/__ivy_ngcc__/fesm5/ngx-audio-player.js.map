{"version":3,"file":"ngx-audio-player.js","sources":["ng:/ngx-audio-player/lib/component/base/base-audio-player.component.ts","ng:/ngx-audio-player/lib/service/audio-player-service/audio-player.service.ts","ng:/ngx-audio-player/lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component.ts","ng:/ngx-audio-player/lib/component/mat-basic-audio-player/mat-basic-audio-player.component.ts","ng:/ngx-audio-player/lib/pipe/seconds-to-minutes.ts","ng:/ngx-audio-player/lib/ngx-audio-player.module.ts","ng:/ngx-audio-player/lib/model/track.model.ts","ng:/ngx-audio-player/public_api.ts","ng:/ngx-audio-player/ngx-audio-player.ts"],"names":[],"mappings":"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","sourcesContent":["import { ViewChild, ElementRef, Output, Input } from '@angular/core';\nimport { MatSlider } from '@angular/material/slider';\nimport { Track } from '../../model/track.model';\nimport { Subject } from 'rxjs';\n\nexport class BaseAudioPlayerFunctions {\n\n    @Output()\n    trackEnded: Subject<string> = new Subject<string>();\n\n    @ViewChild('audioPlayer', { static: true }) player: ElementRef;\n    timeLineDuration: MatSlider;\n\n    iOS = (/iPad|iPhone|iPod/.test(navigator.platform)\n        || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n        && !window.MSStream;\n\n    loaderDisplay = false;\n    isPlaying = false;\n    currentTime = 0;\n    volume = 0.1;\n    duration = 0.01;\n\n    private startOffsetValue = 0;\n    @Input()\n    set startOffset(seconds: number) {\n        this.startOffsetValue = seconds;\n        this.player.nativeElement.currentTime = seconds;\n    }\n    get startOffset(): number {\n        return this.startOffsetValue;\n    }\n\n    @Input()\n    public endOffset = 0;\n\n    currTimePosChanged(event) {\n        this.player.nativeElement.currentTime = event.value;\n    }\n\n    bindPlayerEvent(): void {\n\n        this.player.nativeElement.addEventListener('playing', () => {\n            this.isPlaying = true;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('pause', () => {\n            this.isPlaying = false;\n        });\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n            if (this.currentTime >= this.duration - this.endOffset) {\n                this.player.nativeElement.pause();\n            }\n        });\n        this.player.nativeElement.addEventListener('volume', () => {\n            this.volume = Math.floor(this.player.nativeElement.volume);\n        });\n        if (!this.iOS) {\n            this.player.nativeElement.addEventListener('loadstart', () => {\n                this.loaderDisplay = true;\n            });\n        }\n        this.player.nativeElement.addEventListener('loadeddata', () => {\n            this.loaderDisplay = false;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('ended', () => {\n            this.trackEnded.next('ended');\n        });\n\n    }\n\n    playBtnHandler(): void {\n        if (this.loaderDisplay) {\n            return;\n        }\n        if (this.player.nativeElement.paused) {\n            if (this.currentTime >= this.duration - this.endOffset) {\n                this.player.nativeElement.currentTime = this.startOffset;\n            } else {\n                this.player.nativeElement.currentTime = this.currentTime;\n            }\n\n            this.player.nativeElement.play();\n        } else {\n            this.currentTime = this.player.nativeElement.currentTime;\n            this.player.nativeElement.pause();\n        }\n    }\n\n    play(track?: Track): void {\n\n        if (track) {\n            this.startOffset = track.startOffset || 0;\n            this.endOffset = track.endOffset || 0;\n        }\n\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 50);\n\n    }\n\n    toggleVolume() {\n        if (this.volume === 0) {\n            this.setVolume(1.0);\n        } else {\n            this.setVolume(0);\n        }\n    }\n\n    private setVolume(vol) {\n        this.volume = vol;\n        this.player.nativeElement.volume = this.volume;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioPlayerService {\n\n  // Dynamic update of playlist\n  tracks: Track[] = [];\n  playlistSubject$: BehaviorSubject<Track[]> =\n    new BehaviorSubject<Track[]>(this.tracks);\n\n  // Get the current track\n  currentTrack: Track;\n  currentTrackSubject$: BehaviorSubject<Track> =\n    new BehaviorSubject<Track>(this.currentTrack);\n\n  // Get the current time\n  currentTime: any;\n  currentTimeSubject$: BehaviorSubject<any> =\n    new BehaviorSubject<any>(this.currentTime);\n\n  setPlaylist(tracks: Track[]) {\n    this.tracks = tracks;\n    this.playlistSubject$.next(this.tracks);\n  }\n\n  getPlaylist(): Observable<Track[]> {\n    return this.playlistSubject$.asObservable();\n  }\n\n  setCurrentTrack(currentTrack: Track) {\n    this.currentTrack = currentTrack;\n    this.currentTrackSubject$.next(this.currentTrack);\n  }\n\n  getCurrentTrack(): Observable<Track> {\n    return this.currentTrackSubject$.asObservable();\n  }\n\n  setCurrentTime(currentTime: any) {\n    this.currentTime = currentTime;\n    this.currentTimeSubject$.next(this.currentTime);\n  }\n\n  getCurrentTime(): Observable<any> {\n    return this.currentTimeSubject$.asObservable();\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Track } from '../../model/track.model';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player.component';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\n\n@Component({\n    selector: 'mat-advanced-audio-player',\n    templateUrl: './mat-advanced-audio-player.component.html',\n    styleUrls: ['./mat-advanced-audio-player.component.css', './../base/base-audio-player.component.css']\n})\nexport class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n\n    audioPlayerService: AudioPlayerService;\n    constructor() {\n        super();\n        this.audioPlayerService = new AudioPlayerService();\n    }\n\n    @Input()\n    set playlist(playlist: Track[]) {\n        this.audioPlayerService.setPlaylist(playlist);\n    }\n\n    @ViewChild(MatPaginator, { static: false }) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    displayedColumns: string[] = ['title', 'status'];\n    dataSource = new MatTableDataSource<Track>();\n    paginator: MatPaginator;\n\n    timeLineDuration: MatSlider;\n\n    tracks: Track[] = [];\n\n    @Input() displayTitle = true;\n    @Input() displayPlaylist = true;\n    @Input() displayVolumeControls = true;\n    @Input() pageSizeOptions = [10, 20, 30];\n    @Input() expanded = true;\n    @Input() autoPlay = false;\n\n    private currentIndex = 0;\n\n    currentTrack: Track;\n    private previousTrack: Track;\n    private nextTrack: Track;\n    private repeatIt: boolean = false;\n\n    ngOnInit() {\n\n        this.bindPlayerEvent();\n\n        // Subscribe to playlist observer from AudioPlayerService and\n        // update the playlist within MatAdvancedAudioPlayerComponent\n        this.audioPlayerService.getPlaylist().subscribe(tracks => {\n            if (tracks !== null && tracks !== []) {\n                this.tracks = tracks;\n                this.initialize();\n            }\n        });\n\n    }\n\n    initialize() {\n\n        // populate indexs for the track and configure\n        // material table data source and paginator\n        this.setDataSourceAttributes();\n\n        // auto play next track\n        this.player.nativeElement.addEventListener('ended', () => {\n            console.log('end reached', this.repeatIt)\n            if (this.repeatIt) {\n                this.repeatSong()\n            } else {\n                this.nextSong();\n            }\n        });\n\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.audioPlayerService.setCurrentTime(this.player.nativeElement.currentTime);\n        });\n\n        this.player.nativeElement.currentTime = this.startOffset;\n        this.updateCurrentSong();\n        if (this.autoPlay) {\n            super.play();\n        }\n    }\n\n    setDataSourceAttributes() {\n        let index = 1;\n        if (this.tracks) {\n            this.tracks.forEach((track: Track) => {\n                track.index = index++;\n            });\n            this.dataSource = new MatTableDataSource<Track>(this.tracks);\n            this.dataSource.paginator = this.paginator;\n        }\n    }\n\n    nextSong(): void {\n        if (this.displayPlaylist === true\n            && (((this.currentIndex + 1) % this.paginator.pageSize) === 0\n                || (this.currentIndex + 1) === this.paginator.length)) {\n            if (this.paginator.hasNextPage()) {\n                this.paginator.nextPage();\n            } else if (!this.paginator.hasNextPage()) {\n                this.paginator.firstPage();\n            }\n        }\n        this.currentTime = 0;\n        this.duration = 0.01;\n        this.repeatIt = false;\n\n        if ((this.currentIndex + 1) >= this.tracks.length) {\n            this.currentIndex = 0;\n        } else {\n            this.currentIndex++;\n        }\n        this.updateCurrentSong();\n        this.play(this.nextTrack);\n    }\n\n    previousSong(): void {\n        this.currentTime = 0;\n        this.duration = 0.01;\n        this.repeatIt = false;\n\n        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n            if (this.displayPlaylist === true\n                && (((this.currentIndex) % this.paginator.pageSize) === 0\n                    || (this.currentIndex === 0))) {\n                if (this.paginator.hasPreviousPage()) {\n                    this.paginator.previousPage();\n                } else if (!this.paginator.hasPreviousPage()) {\n                    this.paginator.lastPage();\n                }\n            }\n            if ((this.currentIndex - 1) < 0) {\n                this.currentIndex = (this.tracks.length - 1);\n            } else {\n                this.currentIndex--;\n            }\n        } else {\n            this.resetSong();\n        }\n        this.updateCurrentSong();\n        this.play(this.previousTrack);\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.currentTrack.link;\n    }\n\n    selectTrack(index: number): void {\n        this.currentIndex = index - 1;\n        this.updateCurrentSong();\n        this.play(this.currentTrack);\n    }\n\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n        return this.player.nativeElement.currentTime > 2;\n    }\n\n    updateCurrentSong(): void {\n        this.currentTrack = this.tracks[this.currentIndex];\n        this.previousTrack = ((this.currentIndex - 1) >= 0) ? this.tracks[this.currentIndex - 1] : this.tracks[this.tracks.length - 1];\n        this.nextTrack = ((this.currentIndex + 1) >= this.tracks.length) ? this.tracks[0] : this.tracks[this.currentIndex + 1];\n\n        this.audioPlayerService.setCurrentTrack(this.currentTrack);\n    }\n\n    repeatSong(): void {\n        console.log('u just call repeat the song function')\n        this.repeatIt = true\n        this.currentTime = 0;\n        this.duration = 0.01;\n        this.resetSong()\n\n        this.updateCurrentSong();\n\n        this.play(this.currentTrack);\n    }\n\n    setRepatFlag() {\n        this.repeatIt = !this.repeatIt\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player.component';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\n\n@Component({\n    selector: 'mat-basic-audio-player',\n    templateUrl: './mat-basic-audio-player.component.html',\n    styleUrls: ['./mat-basic-audio-player.component.css', './../base/base-audio-player.component.css']\n})\nexport class MatBasicAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n    @Input()\n    title: string;\n\n    @Input()\n    audioUrl: string;\n\n    @Input()\n    displayTitle = false;\n\n    @Input()\n    autoPlay = false;\n\n    @Input()\n    displayVolumeControls = true;\n\n    audioPlayerService: AudioPlayerService;\n\n    constructor() {\n        super();\n        this.audioPlayerService = new AudioPlayerService();\n    }\n\n    ngOnInit() {\n        this.bindPlayerEvent();\n\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.audioPlayerService.setCurrentTime(this.player.nativeElement.currentTime);\n        });\n\n        if (this.autoPlay) {\n            super.play();\n        }\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.audioUrl;\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({ name: 'secondsToMinutes' })\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        const minutes = ('0' + Math.floor(time / 60)).slice(-2);\n        const seconds = ('0' + time % 60).slice(-2);\n        return `${minutes}:${seconds}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatBasicAudioPlayerComponent } from './component/mat-basic-audio-player/mat-basic-audio-player.component';\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\nimport { MatAdvancedAudioPlayerComponent } from './component/mat-advanced-audio-player/mat-advanced-audio-player.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [MatBasicAudioPlayerComponent, SecondsToMinutesPipe, MatAdvancedAudioPlayerComponent],\n  imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,\n    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],\n  exports: [MatBasicAudioPlayerComponent, MatAdvancedAudioPlayerComponent]\n})\nexport class NgxAudioPlayerModule {\n}\n","export class Track {\n  index?: number;\n  link: string;\n  title: string;\n  startOffset?: number;\n  endOffset?: number;\n  public toString = (): string => {\n    return `Track (index: ${this.index}, title: ${this.title})`;\n  }\n}\n","/*\n * Public API Surface of ngx-audio-player\n */\n\nexport * from './lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component';\nexport * from './lib/component/mat-basic-audio-player/mat-basic-audio-player.component';\nexport * from './lib/ngx-audio-player.module';\nexport * from './lib/model/track.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BaseAudioPlayerFunctions as ɵa} from './lib/component/base/base-audio-player.component';\nexport {SecondsToMinutesPipe as ɵb} from './lib/pipe/seconds-to-minutes';"]}